<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop     
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd" >
	
	<aop:aspectj-autoproxy expose-proxy="true"></aop:aspectj-autoproxy>
 
	<bean id="aopService" class="com.hnzskj.aop.service.impl.AopServiceImpl" ></bean>
  
	<!-- 配置AOP -->
	<aop:config>
		<!-- 配置aspect切面类 -->
		<aop:aspect ref="aopService">
			<!-- 配置pointcut,即切入点，对哪些类的哪些方法起到AOP的作用 -->
			<aop:pointcut id="aopServiceMethods"
				expression="execution(* com.hnzskj.*.service.impl.*.*(..))" />
			<!-- 配置advice,即Aspect类中的aroundTest()方法，这里采用在业务方法执行前进行拦截 -->
			<aop:around method="aroundTest" pointcut-ref="aopServiceMethods" />
			<aop:before method="beforeTest" pointcut-ref="aopServiceMethods" />
			<aop:after method="afterTest" pointcut-ref="aopServiceMethods"/>
		</aop:aspect>
	</aop:config>
	
	
	
	
	
	<!-- 开启注解 ,配置authInterceptorAdapter需要注释掉 ，否则会实例化两个过滤器，默认用系统自带的
	<mvc:annotation-driven />
	-->
	<bean id="authInterceptorAdapter" class="com.hnzskj.common.util.interceptor.AuthInterceptorAdapter">  
		<!-- 
	    <property name="openingTime" value="9" />  
	    <property name="closingTime" value="12" />  
	    <property name="mappingURL" value=".*/user\.do\?action=reg.*" />  
	     -->
	</bean>  
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">  
	    <property name="interceptors">  
	        <list>  
	            <ref bean="authInterceptorAdapter"/>  
	        </list>  
	    </property>  
	</bean>
	
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <bean
	                class="org.springframework.http.converter.StringHttpMessageConverter">
	                <property name="supportedMediaTypes">
	                    <list>
	                        <bean class="org.springframework.http.MediaType">
	                            <constructor-arg index="0" value="text" />
	                            <constructor-arg index="1" value="plain" />
	                            <constructor-arg index="2" value="UTF-8" />
	                        </bean>
	                    </list>
	                </property>
	            </bean>
	        </list>
	    </property>
	</bean>
	  
	
	<context:annotation-config />
	
	<!-- -spring -->
	<bean id="springConfigTools" class="com.hnzskj.common.util.spring.SpringConfigTools"></bean>
	 
	<!-- 注解扫描包 -->
	<context:component-scan base-package="com.hnzskj" />
	
	<!--
		配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd
	-->
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/html/**" location="/html/" />

    
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动Spring MVC 的注解功能,完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />  <!-- json转换器 -->
			</list>
		</property>
	</bean>
	<!-- 对模型视图名称的解析,即在模型视图名称添加前后缀 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/application/" />
		<property name="suffix" value=".jsp" />
		  <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="32505856" /><!-- 上传文件大小限制为31M，31*1024*1024 -->
		<property name="maxInMemorySize" value="4096" />
	</bean>
</beans>
