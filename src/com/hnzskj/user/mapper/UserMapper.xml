<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
 -->
<mapper namespace="com.hnzskj.user.mapper.UserMapper">
   
    <!-- 查询参数，修改即可 -->
    <sql id="fields">
    	UUID,USERNAME,LOGINNAME,PASSWORD,TYPE,GENDER,MOBILE,MAIL,SEQUENCENO,CREATETIME
    </sql>
    
    <!-- 分页，通过map进行设置，map的key为pageBean，一般不需要修改 -->
    <sql id="limitSql" >
    	 <if test="null!=pageBean" >
    		 limit ${pageBean.limit} offset ${pageBean.offset}
    	 </if>
    </sql>
    
    <!-- 动态where条件，通过map进行设置，map的key为demo，demo对应的就是service中的modelName -->
    <sql id="dynamicWhere" >
	  	<where>
	  		<if test="null!=user" >
		  		<if test="@org.apache.commons.lang.StringUtils@isNotBlank(user.uuid)" >
			        and uuid = #{user.uuid} 
			    </if>
			    <if test="@org.apache.commons.lang.StringUtils@isNotBlank(user.userName)" >
			        and userName like '%'+#{user.userName}+'%'  
			    </if>
			    <if test="@org.apache.commons.lang.StringUtils@isNotBlank(user.type)" >
			        and type = #{user.type}
			    </if>
			     <if test="@org.apache.commons.lang.StringUtils@isNotBlank(user.loginName)" >
			        and loginName = #{user.loginName}
			    </if>
		    </if>
		    and 1=1 
	  	</where>
  	</sql>
  
  	<!-- 添加 -->
	<insert id="add" parameterType="User">
		insert into SYS_USER(<include refid="fields" />) values(#{uuid},#{userName},#{loginName},#{password},#{type},#{gender},#{mobile},#{mail},#{sequenceNo},#{currentTime})
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="User">
		update SYS_USER set USERNAME = #{userName},LOGINNAME = #{loginName}, TYPE = #{type},GENDER = #{gender},MOBILE = #{mobile},MAIL = #{mail},SEQUENCENO=#{sequenceNo} where uuid=#{uuid}
	</update>
	
	
	<!-- 修改 -->
	<update id="updPassword" parameterType="User">
		update SYS_USER set password = #{password} where uuid=#{uuid}
	</update>
	
	<!-- 删除 -->
	<delete id="deleteByPrimaryKey" parameterType="User">
		delete from  SYS_USER where uuid = #{uuid}
	</delete>
	
	
	<!-- 批量删除 -->
	<delete id="delete" >
		delete from  SYS_USER   where uuid in
	  <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
           #{item}   
   	  </foreach>  
	</delete>
	
 	<!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类-->  
	<select id="findByPrimaryKey" parameterType="User" resultType="User">
		select <include refid="fields" /> from SYS_USER 
		where uuid=#{uuid}
	</select>
	
	<!-- 用户登录-->  
	<select id="login" parameterType="User" resultType="User">
		select <include refid="fields" /> from SYS_USER 
		where loginName=#{loginName} and password=#{password}
	</select>
	
	<!-- 根据条件查询一条数据 -->
	<select id="findByExample" parameterType="User" resultType="User">
		select top 1 <include refid="fields" /> from SYS_USER  
		<include refid="dynamicWhere" />
	</select>
	
	<!-- 查询数量 -->
	<select id="findCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from SYS_USER 
		<include refid="dynamicWhere" />
	</select>
	
	
	<!-- 分页查询，pageBean为null，默认查询所有的数据 -->
	<select id="find" parameterType="java.util.Map"  resultType="User" >
		select top ${pageBean.limit} <include refid="fields" /> from SYS_USER 
		<include refid="dynamicWhere" />
		and uuid not in (
			select top ${pageBean.offset} uuid  from SYS_USER 
			<include refid="dynamicWhere" />
		)
		ORDER BY SEQUENCENO ASC,CREATETIME DESC
	</select>
	
</mapper>